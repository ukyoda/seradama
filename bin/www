#!/usr/bin/env node
var debug = require('debug')('sera-dev2');
var app = require('../app');

app.set('port', process.env.PORT || 3000);

var server = app.listen(app.get('port'), function() {
  debug('Express server listening on port ' + server.address().port);
});

// 世界
var b2d = require("box2d");
var worldAABB = new b2d.b2AABB();
worldAABB.lowerBound.Set(-100.0, -100.0);
worldAABB.upperBound.Set(100.0, 100.0);
var gravity = new b2d.b2Vec2(0.0, -10.0);
var doSleep = true;
var world = new b2d.b2World(worldAABB, gravity, doSleep);

// 地面
var groundBodyDef = new b2d.b2BodyDef();
groundBodyDef.position.Set(0.0, -10.0);
var groundBody = world.CreateBody(groundBodyDef);
var groundShapeDef = new b2d.b2PolygonDef();
groundShapeDef.SetAsBox(10.0, 1.0);
groundBody.CreateShape(groundShapeDef);

// 壁左
var wallLeftBodyDef = new b2d.b2BodyDef();
wallLeftBodyDef.position.Set(-10.0, 0.0);
var wallLeftBody = world.CreateBody(wallLeftBodyDef);
var wallLeftShapeDef = new b2d.b2PolygonDef();
wallLeftShapeDef.SetAsBox(1.0, 10.0);
wallLeftBody.CreateShape(wallLeftShapeDef);

// 壁右
var wallRightBodyDef = new b2d.b2BodyDef();
wallRightBodyDef.position.Set(10.0, 0.0);
var wallRightBody = world.CreateBody(wallRightBodyDef);
var wallRightShapeDef = new b2d.b2PolygonDef();
wallRightShapeDef.SetAsBox(1.0, 10.0);
wallRightBody.CreateShape(wallRightShapeDef);

// add start
var socketIO = require('socket.io');
// クライアントの接続を待つ(IPアドレスとポート番号を結びつけます)
var io = socketIO.listen(server);

var getPosition = function(data) {
	rotation = event.rotation;
};

// クライアントが接続してきたときの処理
io.sockets.on('connection', function(socket) {
  console.log("connection");
  // メッセージを受けたときの処理
  socket.on('message', function(data) {
    io.sockets.emit('message', data);
  });

  // クライアントが切断したときの処理
  socket.on('disconnect', function(){
    console.log("disconnect");
  });
});
// add end